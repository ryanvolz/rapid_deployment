Done initialising
Result of AcfMultiplyAccumulate for code ++++
(delay 10 x lag 4), length 34 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
Result of AcfMultiplyAccumulate for code +-++
(delay 10 x lag 4), length 34 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
Result of AcfMultiplyAccumulate for code ++-+
(delay 10 x lag 4), length 34 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
Result of AcfMultiplyAccumulate for code +--+
(delay 10 x lag 4), length 34 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
Result of AcfMultiplyAccumulate for code +++-
(delay 10 x lag 4), length 34 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
Result of AcfMultiplyAccumulate for code +-+-
(delay 10 x lag 4), length 34 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
Result of AcfMultiplyAccumulate for code ++--
(delay 10 x lag 4), length 34 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
Result of AcfMultiplyAccumulate for code +---
(delay 10 x lag 4), length 34 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
Result of ResultLagProfileMatrix
(delay 10 x lag 4), length 34
( 0,+0): [  0]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 
( 1,+0): [ 10]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 
( 2,+0): [ 19]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 
( 3,+0): [ 27]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 
Result of Decode for code ++++
(delay 10 x lag 4), length 34
( 0,+0): [  0] 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
( 1,+0): [ 10] 17+ 0j| 35+ 0j| 52+ 0j| 52+ 0j| 52+ 0j| 52+ 0j| 52+ 0j| 52+ 0j| 52+ 0j| 
( 2,+0): [ 19] 17+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 
( 3,+0): [ 27] 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
Result of Decode for code +-++
(delay 10 x lag 4), length 34
( 0,+0): [  0] 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 
( 1,+0): [ 10] 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 
( 2,+0): [ 19]  0+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 
( 3,+0): [ 27] 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 
Result of Decode for code ++-+
(delay 10 x lag 4), length 34
( 0,+0): [  0] 52+ 0j| 52+ 0j| 52+ 0j| 52+ 0j| 52+ 0j| 52+ 0j| 52+ 0j| 52+ 0j| 52+ 0j| 52+ 0j| 
( 1,+0): [ 10] 17+ 0j|  0+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
( 2,+0): [ 19] 17+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 
( 3,+0): [ 27] 52+ 0j| 52+ 0j| 52+ 0j| 52+ 0j| 52+ 0j| 52+ 0j| 52+ 0j| 
Result of Decode for code +--+
(delay 10 x lag 4), length 34
( 0,+0): [  0] 69+ 0j| 69+ 0j| 69+ 0j| 69+ 0j| 69+ 0j| 69+ 0j| 69+ 0j| 69+ 0j| 69+ 0j| 69+ 0j| 
( 1,+0): [ 10]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 
( 2,+0): [ 19]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 
( 3,+0): [ 27] 69+ 0j| 69+ 0j| 69+ 0j| 69+ 0j| 69+ 0j| 69+ 0j| 69+ 0j| 
Result of Decode for code +++-
(delay 10 x lag 4), length 34
( 0,+0): [  0] 86+ 0j| 86+ 0j| 86+ 0j| 86+ 0j| 86+ 0j| 86+ 0j| 86+ 0j| 86+ 0j| 86+ 0j| 86+ 0j| 
( 1,+0): [ 10] -17+ 0j|  0+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
( 2,+0): [ 19] -17+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 
( 3,+0): [ 27] 52+ 0j| 52+ 0j| 52+ 0j| 52+ 0j| 52+ 0j| 52+ 0j| 52+ 0j| 
Result of Decode for code +-+-
(delay 10 x lag 4), length 34
( 0,+0): [  0] 104+ 0j| 104+ 0j| 104+ 0j| 104+ 0j| 104+ 0j| 104+ 0j| 104+ 0j| 104+ 0j| 104+ 0j| 104+ 0j| 
( 1,+0): [ 10] -35+ 0j| -35+ 0j| -35+ 0j| -35+ 0j| -35+ 0j| -35+ 0j| -35+ 0j| -35+ 0j| -35+ 0j| 
( 2,+0): [ 19]  0+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 
( 3,+0): [ 27] 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 35+ 0j| 
Result of Decode for code ++--
(delay 10 x lag 4), length 34
( 0,+0): [  0] 121+ 0j| 121+ 0j| 121+ 0j| 121+ 0j| 121+ 0j| 121+ 0j| 121+ 0j| 121+ 0j| 121+ 0j| 121+ 0j| 
( 1,+0): [ 10] -17+ 0j| -35+ 0j| -17+ 0j| -17+ 0j| -17+ 0j| -17+ 0j| -17+ 0j| -17+ 0j| -17+ 0j| 
( 2,+0): [ 19] -17+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 
( 3,+0): [ 27] 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 17+ 0j| 
Result of Decode for code +---
(delay 10 x lag 4), length 34
( 0,+0): [  0] 138+ 0j| 138+ 0j| 138+ 0j| 138+ 0j| 138+ 0j| 138+ 0j| 138+ 0j| 138+ 0j| 138+ 0j| 138+ 0j| 
( 1,+0): [ 10]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 
( 2,+0): [ 19]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 
( 3,+0): [ 27]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 
about to run test_lpm
code:  ++++++++++++++++ , adding  [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]
code:  +-++++---+--++-+ , adding  [ 1 -1  1  1  1  1 -1 -1 -1  1 -1 -1  1  1 -1  1]
code:  ++-+++--+++++-+- , adding  [ 1  1 -1  1  1  1 -1 -1  1  1  1  1  1 -1  1 -1]
code:  +--+++++-+--+--- , adding  [ 1 -1 -1  1  1  1  1  1 -1  1 -1 -1  1 -1 -1 -1]
code:  +++-++--+-+----+ , adding  [ 1  1  1 -1  1  1 -1 -1  1 -1  1 -1 -1 -1 -1  1]
code:  +-+-++++---+--++ , adding  [ 1 -1  1 -1  1  1  1  1 -1 -1 -1  1 -1 -1  1  1]
code:  ++--+++++-+--+-- , adding  [ 1  1 -1 -1  1  1  1  1  1 -1  1 -1 -1  1 -1 -1]
code:  +---++-----+-++- , adding  [ 1 -1 -1 -1  1  1 -1 -1 -1 -1 -1  1 -1  1  1 -1]
code:  ++++-+--+---++-- , adding  [ 1  1  1  1 -1  1 -1 -1  1 -1 -1 -1  1  1 -1 -1]
code:  +-++-+++--+++++- , adding  [ 1 -1  1  1 -1  1  1  1 -1 -1  1  1  1  1  1 -1]
code:  ++-+-++++---+--+ , adding  [ 1  1 -1  1 -1  1  1  1  1 -1 -1 -1  1 -1 -1  1]
code:  +--+-+----+++-++ , adding  [ 1 -1 -1  1 -1  1 -1 -1 -1 -1  1  1  1 -1  1  1]
code:  +++--+++++-+--+- , adding  [ 1  1  1 -1 -1  1  1  1  1  1 -1  1 -1 -1  1 -1]
code:  +-+--+---++----- , adding  [ 1 -1  1 -1 -1  1 -1 -1 -1  1  1 -1 -1 -1 -1 -1]
code:  ++---+--++-+-+++ , adding  [ 1  1 -1 -1 -1  1 -1 -1  1  1 -1  1 -1  1  1  1]
code:  +----+++-++--+-+ , adding  [ 1 -1 -1 -1 -1  1  1  1 -1  1  1 -1 -1  1 -1  1]
code:  +++++-+--+---++- , adding  [ 1  1  1  1  1 -1  1 -1 -1  1 -1 -1 -1  1  1 -1]
code:  +-+++--+++++-+-- , adding  [ 1 -1  1  1  1 -1 -1  1  1  1  1  1 -1  1 -1 -1]
code:  ++-++--+-+----++ , adding  [ 1  1 -1  1  1 -1 -1  1 -1  1 -1 -1 -1 -1  1  1]
code:  +--++-+-++++---+ , adding  [ 1 -1 -1  1  1 -1  1 -1  1  1  1  1 -1 -1 -1  1]
code:  +++-+--+---++--- , adding  [ 1  1  1 -1  1 -1 -1  1 -1 -1 -1  1  1 -1 -1 -1]
code:  +-+-+-+-+-+-+-+- , adding  [ 1 -1  1 -1  1 -1  1 -1  1 -1  1 -1  1 -1  1 -1]
code:  ++--+-+----+++-+ , adding  [ 1  1 -1 -1  1 -1  1 -1 -1 -1 -1  1  1  1 -1  1]
code:  +---+--++-+-++++ , adding  [ 1 -1 -1 -1  1 -1 -1  1  1 -1  1 -1  1  1  1  1]
code:  ++++---+--++-+-+ , adding  [ 1  1  1  1 -1 -1 -1  1 -1 -1  1  1 -1  1 -1  1]
code:  +-++--+-+----+++ , adding  [ 1 -1  1  1 -1 -1  1 -1  1 -1 -1 -1 -1  1  1  1]
code:  ++-+--+---++---- , adding  [ 1  1 -1  1 -1 -1  1 -1 -1 -1  1  1 -1 -1 -1 -1]
code:  +--+---++-----+- , adding  [ 1 -1 -1  1 -1 -1 -1  1  1 -1 -1 -1 -1 -1  1 -1]
code:  +++---+--++-+-++ , adding  [ 1  1  1 -1 -1 -1  1 -1 -1  1  1 -1  1 -1  1  1]
code:  +-+----+++-++--+ , adding  [ 1 -1  1 -1 -1 -1 -1  1  1  1 -1  1  1 -1 -1  1]
code:  ++-----+-++-+++- , adding  [ 1  1 -1 -1 -1 -1 -1  1 -1  1  1 -1  1  1  1 -1]
code:  +-----+-++-+++-- , adding  [ 1 -1 -1 -1 -1 -1  1 -1  1  1 -1  1  1  1 -1 -1]
adding lpm for code  ++++++++++++++++
adding lpm for code  +-++++---+--++-+
adding lpm for code  ++-+++--+++++-+-
adding lpm for code  +--+++++-+--+---
adding lpm for code  +++-++--+-+----+
adding lpm for code  +-+-++++---+--++
adding lpm for code  ++--+++++-+--+--
adding lpm for code  +---++-----+-++-
adding lpm for code  ++++-+--+---++--
adding lpm for code  +-++-+++--+++++-
adding lpm for code  ++-+-++++---+--+
adding lpm for code  +--+-+----+++-++
adding lpm for code  +++--+++++-+--+-
adding lpm for code  +-+--+---++-----
adding lpm for code  ++---+--++-+-+++
adding lpm for code  +----+++-++--+-+
adding lpm for code  +++++-+--+---++-
adding lpm for code  +-+++--+++++-+--
adding lpm for code  ++-++--+-+----++
adding lpm for code  +--++-+-++++---+
adding lpm for code  +++-+--+---++---
adding lpm for code  +-+-+-+-+-+-+-+-
adding lpm for code  ++--+-+----+++-+
adding lpm for code  +---+--++-+-++++
adding lpm for code  ++++---+--++-+-+
adding lpm for code  +-++--+-+----+++
adding lpm for code  ++-+--+---++----
adding lpm for code  +--+---++-----+-
adding lpm for code  +++---+--++-+-++
adding lpm for code  +-+----+++-++--+
adding lpm for code  ++-----+-++-+++-
adding lpm for code  +-----+-++-+++--
(delay 16 x lag 16), length 136
( 0,+0): [  0] 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 
( 1,+0): [ 16]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 480+ 0j| 
( 2,+0): [ 31]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 448+ 0j| 
( 3,+0): [ 45]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 416+ 0j| 
( 4,+0): [ 58]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 384+ 0j| 
( 5,+0): [ 70]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 352+ 0j| 
( 6,+0): [ 81]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 320+ 0j| 
( 7,+0): [ 91]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 288+ 0j| 
( 8,+0): [100]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 256+ 0j| 
( 9,+0): [108]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 224+ 0j| 
(10,+0): [115]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 192+ 0j| 
(11,+0): [121]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 160+ 0j| 
(12,+0): [126]  0+ 0j|  0+ 0j|  0+ 0j| 128+ 0j| 
(13,+0): [130]  0+ 0j|  0+ 0j| 96+ 0j| 
(14,+0): [133]  0+ 0j| 64+ 0j| 
(15,+0): [135] 32+ 0j| 
(delay 16 x lag 16), length 256
(-15,+0): [255] 32+ 0j| 
(-14,+0): [253]  0+ 0j| 64+ 0j| 
(-13,+0): [250]  0+ 0j|  0+ 0j| 96+ 0j| 
(-12,+0): [246]  0+ 0j|  0+ 0j|  0+ 0j| 128+ 0j| 
(-11,+0): [241]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 160+ 0j| 
(-10,+0): [235]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 192+ 0j| 
(-9,+0): [228]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 224+ 0j| 
(-8,+0): [220]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 256+ 0j| 
(-7,+0): [211]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 288+ 0j| 
(-6,+0): [201]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 320+ 0j| 
(-5,+0): [190]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 352+ 0j| 
(-4,+0): [178]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 384+ 0j| 
(-3,+0): [165]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 416+ 0j| 
(-2,+0): [151]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 448+ 0j| 
(-1,+0): [136]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 480+ 0j| 
( 0,+0): [  0] 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 32+ 0j| 
( 1,+0): [ 16]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 480+ 0j| 
( 2,+0): [ 31]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 448+ 0j| 
( 3,+0): [ 45]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 416+ 0j| 
( 4,+0): [ 58]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 384+ 0j| 
( 5,+0): [ 70]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 352+ 0j| 
( 6,+0): [ 81]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 320+ 0j| 
( 7,+0): [ 91]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 288+ 0j| 
( 8,+0): [100]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 256+ 0j| 
( 9,+0): [108]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 224+ 0j| 
(10,+0): [115]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 192+ 0j| 
(11,+0): [121]  0+ 0j|  0+ 0j|  0+ 0j|  0+ 0j| 160+ 0j| 
(12,+0): [126]  0+ 0j|  0+ 0j|  0+ 0j| 128+ 0j| 
(13,+0): [130]  0+ 0j|  0+ 0j| 96+ 0j| 
(14,+0): [133]  0+ 0j| 64+ 0j| 
(15,+0): [135] 32+ 0j| 
racf::
[[  32.+0.j  480.+0.j  448.+0.j  416.+0.j  384.+0.j  352.+0.j  320.+0.j
   288.+0.j  256.+0.j  224.+0.j  192.+0.j  160.+0.j  128.+0.j   96.+0.j
    64.+0.j   32.+0.j]]
rxcf::
[[  32.+0.j  480.+0.j  448.+0.j  416.+0.j  384.+0.j  352.+0.j  320.+0.j
   288.+0.j  256.+0.j  224.+0.j  192.+0.j  160.+0.j  128.+0.j   96.+0.j
    64.+0.j   32.+0.j   32.+0.j   64.+0.j   96.+0.j  128.+0.j  160.+0.j
   192.+0.j  224.+0.j  256.+0.j  288.+0.j  320.+0.j  352.+0.j  384.+0.j
   416.+0.j  448.+0.j  480.+0.j]]
about to run test_acfmatrix_deterministic
Lpm looks like:
(delay 12 x lag 5), length 50 
 1+101j|  2+102j|  3+103j|  4+104j|  5+105j|  6+106j|  7+107j|  8+108j|  9+109j| 10+110j| 11+111j| 12+112j| 
20+120j| 21+121j| 22+122j| 23+123j| 24+124j| 25+125j| 26+126j| 27+127j| 28+128j| 29+129j| 30+130j| 
40+140j| 41+141j| 42+142j| 43+143j| 44+144j| 45+145j| 46+146j| 47+147j| 48+148j| 49+149j| 
60+160j| 61+161j| 62+162j| 63+163j| 64+164j| 65+165j| 66+166j| 67+167j| 68+168j| 
80+180j| 81+181j| 82+182j| 83+183j| 84+184j| 85+185j| 86+186j| 87+187j| 
AcfMatrixTrapezoidal(0,0) is: 
Exception was thrown: overlap must be < gating
AcfMatrixInverseTrapezoidal(0,0) is: 
Exception was thrown: overlap must be < gating
AcfMatrixTrapezoidal(1,0) is: 
[[  5. +105.j   23.5+123.5j  43. +143.j   62.5+162.5j  82. +182.j ]
 [  6. +106.j   24.5+124.5j  44. +144.j   63.5+163.5j  83. +183.j ]
 [  7. +107.j   25.5+125.5j  45. +145.j   64.5+164.5j  84. +184.j ]
 [  8. +108.j   26.5+126.5j  46. +146.j   65.5+165.5j  85. +185.j ]]
AcfMatrixInverseTrapezoidal(1,0) is: 
[[  1.+101.j   0.  +0.j   0.  +0.j   0.  +0.j   0.  +0.j]
 [  2.+102.j   0.  +0.j   0.  +0.j   0.  +0.j   0.  +0.j]
 [  3.+103.j   0.  +0.j   0.  +0.j   0.  +0.j   0.  +0.j]
 [  4.+104.j   0.  +0.j   0.  +0.j   0.  +0.j   0.  +0.j]
 [  5.+105.j   0.  +0.j   0.  +0.j   0.  +0.j   0.  +0.j]
 [  6.+106.j   0.  +0.j   0.  +0.j   0.  +0.j   0.  +0.j]
 [  7.+107.j   0.  +0.j   0.  +0.j   0.  +0.j   0.  +0.j]
 [  8.+108.j   0.  +0.j   0.  +0.j   0.  +0.j   0.  +0.j]
 [  9.+109.j   0.  +0.j   0.  +0.j   0.  +0.j   0.  +0.j]
 [ 10.+110.j   0.  +0.j   0.  +0.j   0.  +0.j   0.  +0.j]
 [ 11.+111.j   0.  +0.j   0.  +0.j   0.  +0.j   0.  +0.j]
 [ 12.+112.j   0.  +0.j   0.  +0.j   0.  +0.j   0.  +0.j]]
AcfMatrixTrapezoidal(2,0) is: 
[[  5.5+105.5j  24. +124.j   43.5+143.5j  63. +163.j   82.5+182.5j]
 [  7.5+107.5j  26. +126.j   45.5+145.5j  65. +165.j   84.5+184.5j]]
AcfMatrixInverseTrapezoidal(2,0) is: 
[[  1.5+101.5j  20. +120.j    0.   +0.j    0.   +0.j    0.   +0.j ]
 [  3.5+103.5j  22. +122.j    0.   +0.j    0.   +0.j    0.   +0.j ]
 [  5.5+105.5j  24. +124.j    0.   +0.j    0.   +0.j    0.   +0.j ]
 [  7.5+107.5j  26. +126.j    0.   +0.j    0.   +0.j    0.   +0.j ]
 [  9.5+109.5j  28. +128.j    0.   +0.j    0.   +0.j    0.   +0.j ]
 [ 11.5+111.5j  30. +130.j    0.   +0.j    0.   +0.j    0.   +0.j ]]
AcfMatrixTrapezoidal(3,0) is: 
[[  6. +106.j   24.5+124.5j  44. +144.j   63.5+163.5j  83. +183.j ]]
AcfMatrixInverseTrapezoidal(3,0) is: 
[[  2. +102.j   20.5+120.5j  40. +140.j    0.   +0.j    0.   +0.j ]
 [  5. +105.j   23.5+123.5j  43. +143.j    0.   +0.j    0.   +0.j ]
 [  8. +108.j   26.5+126.5j  46. +146.j    0.   +0.j    0.   +0.j ]
 [ 11. +111.j   29.5+129.5j  49. +149.j    0.   +0.j    0.   +0.j ]]
AcfMatrixTrapezoidal(4,0) is: 
[[  6.5+106.5j  25. +125.j   44.5+144.5j  64. +164.j   83.5+183.5j]]
AcfMatrixInverseTrapezoidal(4,0) is: 
[[  2.5+102.5j  21. +121.j   40.5+140.5j  60. +160.j    0.   +0.j ]
 [  6.5+106.5j  25. +125.j   44.5+144.5j  64. +164.j    0.   +0.j ]
 [ 10.5+110.5j  29. +129.j   48.5+148.5j  68. +168.j    0.   +0.j ]]
AcfMatrixTrapezoidal(5,0) is: 
Exception was thrown: gating is too large - maximum possible: 4 
AcfMatrixInverseTrapezoidal(5,0) is: 
[[  3. +103.j   21.5+121.5j  41. +141.j   60.5+160.5j  80. +180.j ]
 [  8. +108.j   26.5+126.5j  46. +146.j   65.5+165.5j  85. +185.j ]]
AcfMatrixTrapezoidal(6,0) is: 
Exception was thrown: gating is too large - maximum possible: 4 
AcfMatrixInverseTrapezoidal(6,0) is: 
[[  3.5+103.5j  22. +122.j   41.5+141.5j  61. +161.j   80.5+180.5j]
 [  9.5+109.5j  28. +128.j   47.5+147.5j  67. +167.j   86.5+186.5j]]
AcfMatrixTrapezoidal(7,0) is: 
Exception was thrown: gating is too large - maximum possible: 4 
AcfMatrixInverseTrapezoidal(7,0) is: 
[[  4. +104.j   22.5+122.5j  42. +142.j   61.5+161.5j  81. +181.j ]]
AcfMatrixTrapezoidal(8,0) is: 
Exception was thrown: gating is too large - maximum possible: 4 
AcfMatrixInverseTrapezoidal(8,0) is: 
[[  4.5+104.5j  23. +123.j   42.5+142.5j  62. +162.j   81.5+181.5j]]
AcfMatrixTrapezoidal(9,0) is: 
Exception was thrown: gating is too large - maximum possible: 4 
AcfMatrixInverseTrapezoidal(9,0) is: 
[[  5. +105.j   23.5+123.5j  43. +143.j   62.5+162.5j  82. +182.j ]]
AcfMatrixTrapezoidal(10,0) is: 
Exception was thrown: gating is too large - maximum possible: 4 
AcfMatrixInverseTrapezoidal(10,0) is: 
[[  5.5+105.5j  24. +124.j   43.5+143.5j  63. +163.j   82.5+182.5j]]
AcfMatrixTrapezoidal(11,0) is: 
Exception was thrown: gating is too large - maximum possible: 4 
AcfMatrixInverseTrapezoidal(11,0) is: 
[[  6. +106.j   24.5+124.5j  44. +144.j   63.5+163.5j  83. +183.j ]]
AcfMatrixTrapezoidal(12,0) is: 
Exception was thrown: gating is too large - maximum possible: 4 
AcfMatrixInverseTrapezoidal(12,0) is: 
[[  6.5+106.5j  25. +125.j   44.5+144.5j  64. +164.j   83.5+183.5j]]
AcfMatrixTrapezoidal(13,0) is: 
Exception was thrown: gating is too large - maximum possible: 4 
AcfMatrixInverseTrapezoidal(13,0) is: 
Exception was thrown: gating is too large - maximum possible: 12 

******
  Overlap Tests 
*****

AcfMatrixTrapezoidal(3,0) is: 
[[  6. +106.j   24.5+124.5j  44. +144.j   63.5+163.5j  83. +183.j ]]
AcfMatrixInverseTrapezoidal(3,0) is: 
[[  2. +102.j   20.5+120.5j  40. +140.j    0.   +0.j    0.   +0.j ]
 [  5. +105.j   23.5+123.5j  43. +143.j    0.   +0.j    0.   +0.j ]
 [  8. +108.j   26.5+126.5j  46. +146.j    0.   +0.j    0.   +0.j ]
 [ 11. +111.j   29.5+129.5j  49. +149.j    0.   +0.j    0.   +0.j ]]
AcfMatrixTrapezoidal(3,1) is: 
[[  6. +106.j   24.5+124.5j  44. +144.j   63.5+163.5j  83. +183.j ]]
AcfMatrixInverseTrapezoidal(3,1) is: 
[[  2. +102.j   20.5+120.5j  40. +140.j    0.   +0.j    0.   +0.j ]
 [  4. +104.j   22.5+122.5j  42. +142.j    0.   +0.j    0.   +0.j ]
 [  6. +106.j   24.5+124.5j  44. +144.j    0.   +0.j    0.   +0.j ]
 [  8. +108.j   26.5+126.5j  46. +146.j    0.   +0.j    0.   +0.j ]
 [ 10. +110.j   28.5+128.5j  48. +148.j    0.   +0.j    0.   +0.j ]]
AcfMatrixTrapezoidal(3,2) is: 
[[  6. +106.j   24.5+124.5j  44. +144.j   63.5+163.5j  83. +183.j ]
 [  7. +107.j   25.5+125.5j  45. +145.j   64.5+164.5j  84. +184.j ]]
AcfMatrixInverseTrapezoidal(3,2) is: 
[[  2. +102.j   20.5+120.5j  40. +140.j    0.   +0.j    0.   +0.j ]
 [  3. +103.j   21.5+121.5j  41. +141.j    0.   +0.j    0.   +0.j ]
 [  4. +104.j   22.5+122.5j  42. +142.j    0.   +0.j    0.   +0.j ]
 [  5. +105.j   23.5+123.5j  43. +143.j    0.   +0.j    0.   +0.j ]
 [  6. +106.j   24.5+124.5j  44. +144.j    0.   +0.j    0.   +0.j ]
 [  7. +107.j   25.5+125.5j  45. +145.j    0.   +0.j    0.   +0.j ]
 [  8. +108.j   26.5+126.5j  46. +146.j    0.   +0.j    0.   +0.j ]
 [  9. +109.j   27.5+127.5j  47. +147.j    0.   +0.j    0.   +0.j ]
 [ 10. +110.j   28.5+128.5j  48. +148.j    0.   +0.j    0.   +0.j ]
 [ 11. +111.j   29.5+129.5j  49. +149.j    0.   +0.j    0.   +0.j ]]
AcfMatrixTrapezoidal(3,3) is: 
Exception was thrown: overlap must be < gating
AcfMatrixInverseTrapezoidal(3,3) is: 
Exception was thrown: overlap must be < gating
AcfMatrixTrapezoidal(3,4) is: 
Exception was thrown: overlap must be < gating
AcfMatrixInverseTrapezoidal(3,4) is: 
Exception was thrown: overlap must be < gating
